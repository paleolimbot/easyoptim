% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gap_seibert.R
\name{seibert.breed}
\alias{seibert.breed}
\title{Combine two values of a parameter type using weighted probabilities}
\usage{
seibert.breed(param, value1, value2, prob = list(breed.use1 = 0.41, breed.use2
  = 0.41, breed.rinterpolate = 0.16, breed.mutate = 0.02), seed = NULL,
  cols = "result", validate = TRUE)
}
\arguments{
\item{param}{A 'param' object}

\item{value1}{The first value}

\item{value2}{The second value}

\item{prob}{A named \code{list} in the form \code{functionname=probability}.
The function described by \code{functionname} should take the parameter as
its first argument and (at least) two vector parameters of arbitrary length
and return a vector of identical length. Examples include
\link{breed.use1}, \link{breed.use2}, \link{breed.rinterpolate}, and
\link{breed.mutate}.}

\item{seed}{A random number seed for replicability.}

\item{cols}{A combination of 'result', 'func', 'value1', and/or 'value2'. Passing multiple column
names will result in a data.frame; passing a single column will result in a vector. This
is helpful for debugging.}

\item{validate}{TRUE to validate arguments, FALSE otherwise. In most cases this function gets
called hundreds to thousands of times using values that were generated by the function
itself. Using validation may help track down bugs when unexpected output occurs.}
}
\value{
A vector of new parameter values, or a data.frame if multiple \code{cols} are
  passed.
}
\description{
Combine two values of a parameter type using weighted probabilities
}
\examples{
p <- param.discrete(c('heads', 'tails', 'edge of coin'), weights=c(0.45, 0.45, 0.1))
v1 <- random.value(p, n=10)
v2 <- random.value(p, n=10)
seibert.breed(p, v1, v2, cols=c('value1', 'value2', 'func', 'result'))

}
\references{
Seibert, J. 2000. Multi-criteria calibration of a conceptual runoff model using a
generic algorithm. Hydrology and Earth System Sciences 4(2): 215â€“224.
}

