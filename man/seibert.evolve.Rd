% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gap_seibert.R
\name{seibert.evolve}
\alias{seibert.evolve}
\title{Evolve a population of parameter values}
\usage{
seibert.evolve(params, values, probs = NULL, rescale = FALSE, seed = NULL,
  validate = TRUE)
}
\arguments{
\item{params}{A \code{list} of parameters with identical names to \code{values}}

\item{values}{A \code{list} of parameter values with identical names to \code{params}.
If all parameters are named parameters, this can be a data.frame.}

\item{probs}{A vector of probabilities with which to weight sampling of the breeding couples.
Can be NULL, indicating there is no preference.}

\item{rescale}{Pass TRUE to rescale \code{probs} to the range (0, 1). This is useful if
the value of probs used is sometimes negative from some objective function.}

\item{seed}{Seed for random operations}

\item{validate}{Pass FALSE to skip validation (may be faster).}
}
\value{
A \code{list} of parameters with identical names to \code{params} and \code{values}
}
\description{
Evolve a population of parameter values
}
\examples{
params <- list(param.discrete(c('heads', 'tails')),
               param.real(c(0, 1)),
               beersdrank=param.normal.int(5, 1),
               taxes=param.fixed(TRUE))
values <- lapply(params, initial.value, n=10)

seibert.evolve(params, values)

# 'select' for heads
for(i in 1:10) {
  values <- seibert.evolve(params, values,
                           ifelse(values[[1]]=="heads", 0.6, 0.4))
}

}

